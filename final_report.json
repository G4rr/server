{"Date": "16/11/2021 03:40:11", "Report name": "final_report", "Owner": "Oleksii Pryshchepa", "Host": "54.93.205.63", "Port": "8080", "Statistic": {"TCV": 21, "TCI": 111, "VO": 10, "VW": 4, "VN": 4, "CM": 3, "SR": "1.24", "ASL3": 0, "ASL2": 7, "ASL1": 12, "ASL0": 2, "Injection": 0, "Cross Site Scripting(XSS)": 1, "External XML Entity(XXE)": 0, "Sensitive Data Exposure(SDE)": 3, "Security Misconfiguration(SM)": 11, "Vulnerability Component(VC)": 2, "Other": 4}, "Alerts": {"Injection": [], "Cross Site Scripting(XSS)": [{"mark": "W", "name": "Cross Site Request Forgery(csrf)", "risk": 1, "desc": "Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated.", "issues": [{"uri": "http://54.93.219.59:8000/login.php\" -e \"http://54.93.219.59:8000/login.php\" -d \"username=alice&password=Letm3in_&Login=Login&user_token=f3f79fbdc1f7c2797ea0c5204f92e888", "method": "POST", "param": "", "attack": "POST /login.php HTTP/1.1\nHost: 54.93.219.59:8000\nReferer: http://54.93.219.59:8000/login.php\nContent-Type: application/x-www-form-urlencoded\n\nusername=alice&password=Letm3in_&Login=Login&user_token=f3f79fbdc1f7c2797ea0c5204f92e888", "evidence": "Lack of anti CSRF token"}], "count": 1, "solution": "Check if your framework has built-in CSRF protection and use it. If framework does not have built-in CSRF protection add CSRF tokens to all state changing requests (requests that cause actions on the site) and validate them on backend.", "reference": "OWASP: Testing for Cross Site Request Forgery: https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/06-Session_Management_Testing/05-Testing_for_Cross_Site_Request_Forgery.html, OWASP: Cross-Site Request Forgery Prevention Cheat Sheet: https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html, CWE-352: Cross-Site Request Forgery (CSRF): https://cwe.mitre.org/data/definitions/352.html", "other": "Lack of anti CSRF token"}], "External XML Entity(XXE)": [], "Sensitive Data Exposure(SDE)": [{"mark": "O", "name": "Directory Browsing", "risk": 2, "desc": "It is possible to view the directory listing.  Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.", "issues": [{"uri": "http://54.93.219.59:8000/dvwa/", "method": "GET", "param": "", "attack": "http://54.93.219.59:8000/dvwa/", "evidence": "Parent Directory"}, {"uri": "http://54.93.219.59:8000/dvwa/css/", "method": "GET", "param": "", "attack": "http://54.93.219.59:8000/dvwa/css/", "evidence": "Parent Directory"}, {"uri": "http://54.93.219.59:8000/dvwa/images/", "method": "GET", "param": "", "attack": "http://54.93.219.59:8000/dvwa/images/", "evidence": "Parent Directory"}], "count": 3, "solution": " Disable directory browsing.  If this is required, make sure the listed files does not induce risks.  ", "reference": " http://httpd.apache.org/docs/mod/core.html#options   http://alamo.satlug.org/pipermail/satlug/2002-February/000053.html  ", "other": ""}, {"mark": "N", "name": "Apache default file", "risk": 1, "desc": "Apache default file found.", "issues": [{"uri": "http://54.93.219.59:8000/icons/README", "method": "GET", "param": "", "attack": "GET/ HTTP/1.1\nHost:54.93.219.59:8000/icons/README", "evidence": ""}], "count": 1, "solution": "", "reference": "OSVDB-3233", "other": ""}, {"mark": "W", "name": "Potentially dangerous file(nikto)", "risk": 1, "desc": "A file with potential vulnerabilities has been found on the website.", "issues": [{"uri": "http://54.93.219.59:8000/config/", "method": "GET", "param": "", "attack": "GET /config/ HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Configuration information may be available remotely."}, {"uri": "http://54.93.219.59:8000/icons/README", "method": "GET", "param": "", "attack": "GET /icons/README HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Apache default file found.\nReferences:\nhttps://vulners.com/osvdb/OSVDB:3233"}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "GET /login.php HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Admin login page/section found."}, {"uri": "http://54.93.219.59:8000/server-status", "method": "GET", "param": "", "attack": "GET /server-status HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Apache server-status interface found (protected/forbidden)"}, {"uri": "http://54.93.219.59:8000/README.md", "method": "GET", "param": "", "attack": "GET /README.md HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Readme Found"}], "count": 5, "solution": "Make sure the script is up-to-date and restrict access to it if possible.", "reference": "Mitre: Search details of a CVE: https://cve.mitre.org/cve/search_cve_list.html", "other": "Readme Found"}], "Security Misconfiguration(SM)": [{"mark": "OW", "name": "Content Security Policy (CSP) Header Not Set", "risk": 2, "desc": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files./nContent Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/sitemap.xml", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "CSP is not set"}], "count": 3, "solution": " Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.  /nConfiguring Content Security Policy involves adding the Content-Security-Policy HTTP header to a web page and giving it values to control what resources the user agent is allowed to load for that page.", "reference": " https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy   https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html   http://www.w3.org/TR/CSP/   http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html   http://www.html5rocks.com/en/tutorials/security/content-security-policy/   http://caniuse.com/#feat=contentsecuritypolicy   http://content-security-policy.com/  /nMozilla: Content Security Policy (CSP): https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP, OWASP: Content Security Policy Cheat Sheet: https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html, OWASP: How to do Content Security Policy (PDF): https://owasp.org/www-pdf-archive/2019-02-22_-_How_do_I_Content_Security_Policy_-_Print.pdf", "other": "/nCSP is not set"}, {"mark": "O", "name": "HTTP Only Site", "risk": 2, "desc": "The site is only served under HTTP and not HTTPS.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "", "attack": "", "evidence": ""}], "count": 1, "solution": " Configure your web or application server to use SSL (https).  ", "reference": " https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html   https://letsencrypt.org/  ", "other": " Failed to connect.   ZAP attempted to connect via: https://54.93.219.59:443/login.php  "}, {"mark": "ONNW", "name": "X-Frame-Options Header Not Set", "risk": 2, "desc": "X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks./nThe anti-clickjacking X-Frame-Options header is not present./nThe X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type./nThe secure flag is an option that can be set by the application server when sending a new cookie to the user within an HTTP Response. The purpose of the secure flag is to prevent cookies from being observed by unauthorized parties due to the transmission of a the cookie in clear text.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "X-Frame-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET/ HTTP/1.1\nHost:54.93.219.59:8000/", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET/ HTTP/1.1\nHost:54.93.219.59:8000/", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Secure flag is not set in the cookie : security"}], "count": 5, "solution": " Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.   /n/n/nWhen generating the cookie, make sure to set the Secure Flag to True.", "reference": " https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options  /n/n/nOWASP: Testing for Cookies Attributes: https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html, OWASP: Secure Cookie Attribute: https://owasp.org/www-community/controls/SecureCookieAttribute", "other": "/n/n/nSecure flag is not set in the cookie : security"}, {"mark": "OW", "name": "Absence of Anti-CSRF Tokens", "risk": 1, "desc": "No Anti-CSRF tokens were found in a HTML submission form.A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.CSRF attacks are effective in a number of situations, including:    * The victim has an active session on the target site.    * The victim is authenticated via HTTP auth on the target site.    * The victim is on the same local network as the target site.CSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy./nHTTP security headers tell the browser how to behave when handling the website's content.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "", "evidence": "<form action=\"login.php\" method=\"post\">"}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Strict-Transport-Security is not set"}], "count": 5, "solution": " Phase: Architecture and Design   Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.   For example, use anti-CSRF packages such as the OWASP CSRFGuard.      Phase: Implementation   Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.      Phase: Architecture and Design   Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).   Note that this can be bypassed using XSS.      Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.   Note that this can be bypassed using XSS.      Use the ESAPI Session Management control.   This control includes a component for CSRF.      Do not use the GET method for any request that triggers a state change.      Phase: Implementation   Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.  /nUse the recommendations for hardening your HTTP Security Headers.", "reference": " http://projects.webappsec.org/Cross-Site-Request-Forgery   http://cwe.mitre.org/data/definitions/352.html  /nNetsparker: HTTP Security Headers: An Easy Way to Harden Your Web Applications: https://www.netsparker.com/blog/web-security/http-security-headers/, KeyCDN: Hardening Your HTTP Security Headers: https://www.keycdn.com/blog/http-security-headers, OWASP: HTTP SECURITY HEADERS (Protection For Browsers) (PDF): https://owasp.org/www-chapter-ghana/assets/slides/HTTP_Header_Security.pdf", "other": " No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"Login\" \"password\" \"user_token\" \"username\" ].  /nStrict-Transport-Security is not set"}, {"mark": "O", "name": "Cookie No HttpOnly Flag", "risk": 1, "desc": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "PHPSESSID", "attack": "", "evidence": "Set-Cookie: PHPSESSID"}], "count": 1, "solution": " Ensure that the HttpOnly flag is set for all cookies.  ", "reference": " https://owasp.org/www-community/HttpOnly  ", "other": ""}, {"mark": "O", "name": "Cookie without SameSite Attribute", "risk": 1, "desc": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "PHPSESSID", "attack": "", "evidence": "Set-Cookie: PHPSESSID"}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "security", "attack": "", "evidence": "Set-Cookie: security"}], "count": 2, "solution": " Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.  ", "reference": " https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site  ", "other": ""}, {"mark": "O", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": 1, "desc": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/dvwa/css/login.css", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/dvwa/images/login_logo.png", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/dvwa/images/RandomStorm.png", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/robots.txt", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/sitemap.xml", "method": "GET", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "", "attack": "", "evidence": "Apache/2.4.10 (Debian)"}], "count": 8, "solution": " Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.  ", "reference": " http://httpd.apache.org/docs/current/mod/core.html#servertokens   http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007   http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx   http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html  ", "other": ""}, {"mark": "O", "name": "X-Content-Type-Options Header Missing", "risk": 1, "desc": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "issues": [{"uri": "http://54.93.219.59:8000/dvwa/css/login.css", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images/login_logo.png", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images/RandomStorm.png", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/favicon.ico", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/robots.txt", "method": "GET", "param": "X-Content-Type-Options", "attack": "", "evidence": ""}], "count": 6, "solution": " Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.   If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.  ", "reference": " http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx   https://owasp.org/www-community/Security_Headers  ", "other": " This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.   At \"High\" threshold this scan rule will not alert on client or server error responses.  "}, {"mark": "O", "name": "Cookie Slack Detector", "risk": 0, "desc": "Repeated GET requests: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.", "issues": [{"uri": "http://54.93.219.59:8000", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css/login.css", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images/login_logo.png", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images/RandomStorm.png", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/favicon.ico", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/sitemap.xml", "method": "GET", "param": "", "attack": "", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "", "attack": "", "evidence": ""}], "count": 12, "solution": "", "reference": " http://projects.webappsec.org/Fingerprinting     ", "other": " Cookies that don't have expected effects can reveal flaws in application logic. In the worst case, this can reveal where authentication via cookie token(s) is not actually enforced.   These cookies affected the response:    These cookies did NOT affect the response: security,PHPSESSID     "}, {"mark": "N", "name": "Cookie PHPSESSID created", "risk": 1, "desc": "Cookie PHPSESSID created without the httponly flag", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET/ HTTP/1.1\nHost:54.93.219.59:8000/", "evidence": ""}], "count": 1, "solution": "", "reference": "", "other": ""}, {"mark": "W", "name": "Potentially dangerous file(nikto)", "risk": 1, "desc": "A file with potential vulnerabilities has been found on the website.", "issues": [{"uri": "http://54.93.219.59:8000/config/", "method": "GET", "param": "", "attack": "GET /config/ HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Configuration information may be available remotely."}, {"uri": "http://54.93.219.59:8000/icons/README", "method": "GET", "param": "", "attack": "GET /icons/README HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Apache default file found.\nReferences:\nhttps://vulners.com/osvdb/OSVDB:3233"}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "GET /login.php HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Admin login page/section found."}, {"uri": "http://54.93.219.59:8000/server-status", "method": "GET", "param": "", "attack": "GET /server-status HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Apache server-status interface found (protected/forbidden)"}, {"uri": "http://54.93.219.59:8000/README.md", "method": "GET", "param": "", "attack": "GET /README.md HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "Readme Found"}], "count": 5, "solution": "Make sure the script is up-to-date and restrict access to it if possible.", "reference": "Mitre: Search details of a CVE: https://cve.mitre.org/cve/search_cve_list.html", "other": "Readme Found"}], "Vulnerability Component(VC)": [{"mark": "N", "name": "Apache/2.4.10 appears to", "risk": 1, "desc": "Apache/2.4.10 appears to be outdated (current is at least Apache/2.4.46). Apache 2.2.34 is the EOL for the 2.x branch.", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "HEAD", "param": "", "attack": "HEAD/ HTTP/1.1\nHost:54.93.219.59:8000/", "evidence": ""}], "count": 1, "solution": "", "reference": "", "other": ""}, {"mark": "W", "name": "Fingerprint web technology(wapp)", "risk": 2, "desc": "The use of a web technology can be deducted due to the presence of its specific fingerprints.", "issues": [{"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "{\"versions\": [\"2.4.10\"], \"name\": \"Apache\", \"categories\": [\"Web servers\"]}"}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "{\"versions\": [], \"name\": \"Debian\", \"categories\": [\"Operating systems\"]}"}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "", "attack": "GET / HTTP/1.1\nHost: 54.93.219.59:8000", "evidence": "{\"versions\": [], \"name\": \"PHP\", \"categories\": [\"Programming languages\"]}"}], "count": 3, "solution": "This is only for informational purposes.", "reference": "OWASP: Fingerprint Web Server: https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server.html, OWASP: Fingerprint Web Application Framework: https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/01-Information_Gathering/08-Fingerprint_Web_Application_Framework.html", "other": "{\"versions\": [], \"name\": \"PHP\", \"categories\": [\"Programming languages\"]}"}], "Other": [{"mark": "O", "name": "Relative Path Confusion", "risk": 2, "desc": "The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct \"relative path\" for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the \"cross-content\" response in a permissive manner, or can be tricked into permissively parsing the \"cross-content\" response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "http://54.93.219.59:8000/login.php/h6ykq/rzqr6", "evidence": "<link rel=\"stylesheet\" type=\"text/css\" href=\"dvwa/css/login.css\">"}], "count": 1, "solution": " Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side, or server side.   Within the application, the correct use of the \"<base>\" HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document.   Use the \"Content-Type\" HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response.   Use the \"X-Content-Type-Options: nosniff\" HTTP response header to prevent the web browser from \"sniffing\" the content type of the response.   Use a modern DOCTYPE such as \"<!doctype html>\" to prevent the page from being rendered in the web browser using \"Quirks Mode\", since this results in the content type being ignored by the web browser.   Specify the \"X-Frame-Options\" HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks.   ", "reference": " http://www.thespanner.co.uk/2014/03/21/rpo/   https://hsivonen.fi/doctype/   http://www.w3schools.com/tags/tag_base.asp  ", "other": " No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.   A Content Type of \"text/html;charset=utf-8\" was specified. If the web browser is employing strict parsing rules, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.     Quirks Mode is implicitly enabled via the use of an old DOCTYPE with PUBLIC id \"-//W3C//DTD XHTML 1.0 Strict//EN\", allowing the specified Content Type to be bypassed in some web browsers.  "}, {"mark": "O", "name": "Reverse Tabnabbing", "risk": 2, "desc": "At least one link on this page is vulnerable to Reverse tabnabbing as it uses a target attribute without using both of the \"noopener\" and \"noreferrer\" keywords in the \"rel\" attribute, which allows the target page to take control of this page.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "", "evidence": "<a href=\"http://www.dvwa.co.uk/\" target=\"_blank\">Damn Vulnerable Web Application (DVWA)</a>"}], "count": 1, "solution": " Do not use a target attribute, or if you have to then also add the attribute: rel=\"noopener noreferrer\".  ", "reference": " https://owasp.org/www-community/attacks/Reverse_Tabnabbing   https://dev.to/ben/the-targetblank-vulnerability-by-example   https://mathiasbynens.github.io/rel-noopener/   https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c  ", "other": ""}, {"mark": "O", "name": "User Agent Fuzzer", "risk": 0, "desc": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "issues": [{"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/css", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/dvwa/images", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "evidence": ""}, {"uri": "http://54.93.219.59:8000/login.php", "method": "POST", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "evidence": ""}], "count": 49, "solution": "", "reference": " https://owasp.org/wstg  ", "other": ""}, {"mark": "N", "name": "Admin login page/section", "risk": 1, "desc": "Admin login page/section found.", "issues": [{"uri": "http://54.93.219.59:8000/login.php", "method": "GET", "param": "", "attack": "GET/ HTTP/1.1\nHost:54.93.219.59:8000/login.php", "evidence": ""}], "count": 1, "solution": "", "reference": "", "other": ""}]}}